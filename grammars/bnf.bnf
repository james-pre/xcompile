
string          = '("(?:\\.|[^"\\])*"|\'(?:\\.|[^\'\\])*\')';
identifier      = '[a-zA-Z_][\w-]*';
number          = '[0-9]+(\.[0-9]+)?';

@ignore
whitespace      = '[ \t]+';

@ignore
line_terminator	= "\n+";

@ignore
comment         = "#(?!#)([^\n]*)";

@ignore comma   = ',';

@root
directive       = "##\w+ [^\n]*";

# Simplifies internals

pipe = '\|';
left_paren = '\(';
right_paren = '\)';
left_bracket = '\[';
right_bracket = '\]';
left_brace = '\{';
right_brace = '\}';

# groups
parenthesized = left_paren expression right_paren;
optional = (left_bracket expression right_bracket) | (identifier '\?');
repetition = (left_brace expression right_brace) | (identifier '\*');

term = parenthesized | optional | repetition | string | identifier;

# TODO: Make this non-recursive. ATM this breaks the parser.
sequence = term*;
expression = sequence {pipe sequence};

attribute-value = identifier | string | number;

attribute = '@' identifier [':' attribute-value];

@root
rule = attribute* identifier '=' expression ';';
